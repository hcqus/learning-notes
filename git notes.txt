1.git init:把当前目录变成git可以管理的仓库
2.git add <file> :把文件添加到仓库
3.git commit -m <message>：把文件提交到仓库
4.git status : 查看仓库当前状态
5.git diff : 查看difference
6.git log --pretty=oneline: 查看历史记录
7.git reset --hard HEAD^:回退到上个版本，上上个版本参数为HEAD^^
8.git reflog:查看版本迭代历史记录
9.git checkout -- <file>：把文件在工作区的修改全部撤销
10.git reset head <file> ：把暂存区的修改撤销，重新放回工作区
11.git rm：从版本库删除文件，需要提交。
12.git remote add origi git@server-name:path/repo-name.git：关联远程库
13.git push -u origin master:关联后第一次推送master所有的内容
14.git clone git@server-name:path/repo-name.git：从远程库克隆
15.git branch :查看分支
16.git branch <name>:创建分支
17.git checkout <name>:切换分支
18.git checkout -b <name>创建并切换分支
19.git merge <name>:合并某分支到当前分支
20.git branch -d <name>:删除分支
21.git log --graph:查看分支合并图
22.git merge --no-ff -m <message> <name>：普通模式合并，能看出曾经做过的合并
23.git stash :把当前工作现场保存起来，等以后恢复现场后继续工作。
24.git stash pop:恢复并把stash内容删除
25.git remote -v:查看远程库信息
26.git push origin branch-name:把分支推送到远程库对应的远程分支上
27.git pull :如果推送失败先抓取远程的新提交
28.git checkout -b branch-name origin/branch-name:在本地创建和远程分支对应的分支
29.git branch --set-upstream branch-name origin/branch-name:建立本地分支和远程分支的关联
30.git rebase:把本地未push的分叉提交历史整理成直线
31.git tag <name>:打标签
32.git tag ：查看所有标签
33.git show <tagname>:查看标签信息
34.git push origin <tagname>:推送某个标签到远程
35.git push origin --tags：一次性推送全部未推送的本地标签
36.git tag -d <tagname>:删除一个本地标签
37.git push origin :refs/rags/<tagname>：删除一个远程标签